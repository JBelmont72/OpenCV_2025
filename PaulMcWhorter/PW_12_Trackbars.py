'''  
'''
'''Understanding COlors and HSV THis sketch uses just the BGR color scale
Will create a mouseClick function so that the function will listen in the "WEBcam" frame for a mouseclick function.
Will then grab the value generated by the mouseclick function and perform a command in the while loop
python -m venv .venv
source .venv/bin/activate

use the 3.9.6 ('venv':venv)  version in the interpreter!!
'''
import sys
import cv2
print(cv2.__version__)
import numpy as np
print(f"This is version {sys.version}")
print(np.__version__)
width=640
height=360
evt =0
xVal = 0
yVal = 0

def mouseClick(event,Xpos,yPos,flags,params):
    global evt
    global xVal
    global yVal
    if event == cv2.EVENT_LBUTTONDOWN:
        print(event)
        xVal =Xpos
        yVal =yPos       
        evt = event
        
        
    if event == cv2.EVENT_LBUTTONUP:
        evt = event
        print(evt)
cam = cv2.VideoCapture(0)
# cam=cv2.VideoCapture(0,cv2.CAP_DSHOW)
cam.set(cv2.CAP_PROP_FRAME_WIDTH, width)
cam.set(cv2.CAP_PROP_FRAME_HEIGHT,height)
cam.set(cv2.CAP_PROP_FPS, 30)
cam.set(cv2.CAP_PROP_FOURCC,cv2.VideoWriter_fourcc(*'MJPG'))
cv2.namedWindow('my WEBcam')
cv2.setMouseCallback('my WEBcam',mouseClick)
while True:
    ignore,  frame = cam.read()
    if evt == 1:
        print('Event:',int(evt))
        print(int(xVal), int(yVal))
        x = np.zeros([250,250,3],dtype=np.uint8)
        clr = frame[yVal][xVal]
        print(clr)
        x[:,:]=clr #without this the x frame is black, with this the x frame takes on the color selected by the mouse
        cv2.putText(x,str(clr),(0,50),cv2.FONT_HERSHEY_COMPLEX,1,(0,0,0),1)
        cv2.imshow('Color Picker',x)
        cv2.moveWindow('Color Picker',width,40)
        # evt = 0           # in demo needed this to reset the event trigger 
    cv2.imshow('my WEBcam', frame)
    cv2.moveWindow('my WEBcam',0,0)
    if cv2.waitKey(1) & 0xff ==ord('q'):
        break
cam.release()